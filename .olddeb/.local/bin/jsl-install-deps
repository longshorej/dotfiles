#!/bin/bash

set -e

function join {
  local IFS="$1"
  shift
  echo "$*"
}

which sudo > /dev/null 2>&1 || (echo "* install sudo" && exit 1)

GOPATH="$HOME/work/go"

PACKAGES=(
  abcde
  ack-grep
  ansible
  apache2-utils
  arandr
  build-essential
  cifs-utils
  chromium
  clang
  cloc
  cmus
  colortest
  compton
  cups
  curl
  davfs2
  dconf-cli
  debootstrap
  desktop-file-utils
  dh-autoreconf
  dnsutils
  dunst
  expect
  fabric
  ffmpeg
  filezilla
  firefox
  firmware-linux-nonfree
  flac
  emacs
  feh
  #gedit
  gimp
  glyrc
  golang-go
  go-md2man
  gnome-keyring
  gnome-themes-standard
  gpgv1
  haskell-platform
  i3
  icedove
  icedtea-8-plugin
  iotop
  iperf
  irssi
  kubernetes-client
  libinput-tools
  libgc-dev
  libgnome-keyring-dev
  libmusicbrainz-discid-perl
  libnotify-bin
  libpam-gnome-keyring
  libreoffice
  libreoffice-gtk3
  libwebservice-musicbrainz-perl
  libx11-dev
  libxft-dev
  libxext-dev
  linux-source
  lm-sensors
  lnav
  lvm2
  makeself
  #mariadb-client
  #mariadb-server
  maven
  mplayer
  mysql-workbench
  network-manager-gnome
  network-manager-vpnc
  network-manager-vpnc-gnome
  nmap
  nodejs
  npm
  ntp
  openjdk-8-jdk
  openjdk-8-source
  openssh-client
  openssh-server
  ovmf
  pandoc
  paprefs
  parcellite
  pavucontrol
  percona-toolkit
  php
  pidgin
  pidgin-libnotify
  pigz
  #protobuf-compiler
  pulseaudio
  pv
  python-pip
  python3-pip
  qemu-kvm
  rdesktop
  rofi
  rxvt-unicode-256color
  #rsyslog
  scala
  screen
  screenfetch
  scrot
  silversearcher-ag
  sshfs
  subversion
  sxiv
  texlive-latex-base
  thermald
  tmux
  tree
  unifont
  #unrar
  unzip
  vpnc
  vim
  vim-gtk3
  virtualbox-qt
  virt-manager
  visualvm
  xautolock
  xbacklight
  xorg
  xterm
  youtube-dl
  zathura
)

APT_ALL_INSTALLED=1

for PACKAGE in "${PACKAGES[@]}"; do
  dpkg -s "$PACKAGE" >/dev/null 2>&1 || APT_ALL_INSTALLED=0
done

#if [ ! -f "/etc/apt/sources.list.d/percona.list" ]; then
#  sudo apt-key adv --keyserver keys.gnupg.net --recv-keys 1C4CBDCDCD2EFD2A
#  echo "deb http://repo.percona.com/apt jessie main" | sudo tee --append /etc/apt/sources.list.d/percona.list
#  echo "deb-src http://repo.percona.com/apt jessie main" | sudo tee --append /etc/apt/sources.list.d/percona.list
#  APT_ALL_INSTALLED=0
#fi

if [ $APT_ALL_INSTALLED -eq 0 ]; then
  sudo apt-get -y update
  sudo apt-get install -y `join " " "${PACKAGES[@]}"`
fi

if [ ! -f "/usr/share/doc/git/contrib/credential/gnome-keyring/git-credential-gnome-keyring" ]; then
  echo "* making git contrib gnome-keyring"
  sudo make --directory=/usr/share/doc/git/contrib/credential/gnome-keyring
fi

PIP_ALL_INSTALLED=1

PIP_PACKAGES=(pyinstaller websocket-client sexpdata)

for PACKAGE in "${PIP_PACKAGES[@]}"; do
  pip show "$PACKAGE" >/dev/null 2>&1 || PIP_ALL_INSTALLED=0
done

if [ $PIP_ALL_INSTALLED -eq 0 ]; then
  sudo pip install `join " " "${PIP_PACKAGES[@]}"`
fi

#go get github.com/rakyll/boom

sudo update-java-alternatives --set java-1.8.0-openjdk-amd64
sudo update-alternatives --install /usr/bin/node node /usr/bin/nodejs 10

for MODULE in ${JSL_DOTFILES_MODULES[@]}; do
  if [ -d "$MODULE" ]; then
     echo "* installing module $MODULE"

     (cd "$MODULE" && git pull)
     (cd "$MODULE" && git submodule foreach -q --recursive 'git checkout $(git config -f $toplevel/.gitmodules submodule.$name.branch || echo master) && git pull')
     (cd "$MODULE" && rsync -rcip --exclude=.git --exclude=README.md --exclude=LICENSE . ~)

     if [ -f "$MODULE/install-deps" ]; then
       . "$MODULE/install-deps"
     fi
  fi
done

#!/bin/bash

set -e

if [ ! -d ~/work/dotfiles ]; then
  >&2 echo "clone into ~/work/dotfiles"
  exit 1
fi

mkdir -p ~/bin ~/desktop ~/documents ~/downloads ~/music ~/pictures ~/programs ~/videos ~/work

cd ~/work/dotfiles

#git pull

#git submodule foreach --recursive git reset --hard
#git submodule foreach git fetch origin master
#git submodule foreach git reset --hard FETCH_HEAD
#git submodule foreach git clean -df

git submodule foreach git pull origin master

doRsync() {
  echo "* syncing $1"

  rsync -m -rcip --links \
    --filter=':- .gitignore' \
    --exclude=.git \
    --exclude='*.swp' \
    --exclude=README.md \
    --exclude=LICENSE \
    --exclude=bin/longshorej-install-dotfiles \
    --exclude=bin/longshorej-install-deps "$1" ~
}

doRsync .

if [ -d "./programs/dotcustom/$HOSTNAME" ]; then
  doRsync "./programs/dotcustom/$HOSTNAME/"
fi

ln -sf ~/work/dotfiles/bin/longshorej-install-dotfiles ~/bin/longshorej-install-dotfiles
ln -sf ~/work/dotfiles/bin/longshorej-install-deps ~/bin/longshorej-install-deps

for MODULE in ${JSL_DOTFILES_MODULES[@]}; do
  if [ -d "$MODULE" ]; then
     echo "* installing module $MODULE"

     (cd "$MODULE" && git pull)
     (cd "$MODULE" && git submodule foreach -q --recursive 'git checkout $(git config -f $toplevel/.gitmodules submodule.$name.branch || echo master) && git pull')
     (cd "$MODULE" && rsync -rcip --exclude=.git --exclude=README.md --exclude=LICENSE . ~)

     if [ -f "$MODULE/install-dotfiles" ]; then
       . "$MODULE/install-dotfiles"
     fi
  fi
done

#systemctl --user enable emacs
#systemctl --user start emacs

~/programs/dotscala/build

#!/bin/bash

set -e

function join {
  local IFS="$1"
  shift
  echo "$*"
}

which sudo > /dev/null 2>&1 || (echo "* install sudo" && exit 1)

echo "* running install-dotfiles"

INITIAL_SUM=`md5sum $BASH_SOURCE`

cd ${0%/*}

PACKAGES=(
  abcde
  ack-grep
  build-essential
  cifs-utils
  chromium
  cmus
  compton
  cups
  curl
  dconf-cli
  debootstrap
  ffmpeg
  flac
  emacs
  feh
  #gedit
  glyrc
  #gnome-terminal
  gnome-themes-standard
  haskell-platform
  i3
  icedove
  icedtea-8-plugin
  iceweasel
  iotop
  iperf
  irssi
  libnotify-bin
  libreoffice
  libx11-dev
  libxft-dev
  libxext-dev
  lm-sensors
  mariadb-client
  mariadb-server
  mplayer
  network-manager-gnome
  network-manager-vpnc
  network-manager-vpnc-gnome
  nmap
  nodejs
  ntp
  openjdk-8-jdk
  openjdk-8-source
  openssh-client
  paprefs
  parcellite
  pavucontrol
  php
  pidgin
  pidgin-libnotify
  pigz
  pulseaudio
  python3-pip
  rdesktop
  rofi
  rxvt-unicode-256color
  #rsyslog
  scala
  screen
  scrot
  silversearcher-ag
  subversion
  sxiv
  thermald
  tmux
  unifont
  #unrar
  unzip
  vpnc
  vim
  xautolock
  xorg
  xterm
  youtube-dl
  zathura
)

pwd=`pwd`
mkdir -p ~/bin ~/work ~/programs

if [ ! -f ~/bin/install-dotfiles ]; then
  echo "#!/usr/bin/env bash" > ~/bin/install-dotfiles
  echo "exec $pwd/install-dotfiles" >> ~/bin/install-dotfiles
  chmod +x ~/bin/install-dotfiles
  exec ~/bin/install-dotfiles
fi

cd ..

git pull
git submodule foreach --recursive git reset --hard
git submodule foreach git fetch origin master
git submodule foreach git reset --hard FETCH_HEAD
git submodule foreach git clean -df

rsync -rcip --links --exclude=.git --exclude='*.swp' --exclude=README.md --exclude=LICENSE --exclude bin/install-dotfiles . ~

# TODO restart the script if install-dotfiles has changed

ALL_INSTALLED=1

for PACKAGE in "${PACKAGES[@]}"; do
  dpkg -s "$PACKAGE" >/dev/null 2>&1 || ALL_INSTALLED=0
done

if [ $ALL_INSTALLED -eq 0 ]; then
  sudo apt-get -y update
  sudo apt-get -y dist-upgrade
  sudo apt-get install -y `join " " "${PACKAGES[@]}"`
fi

for MODULE in ${LONGSHOREJ_DOTFILES_MODULES[@]}; do
  if [ -d "$MODULE" ]; then
     echo "* installing module $MODULE"

     (cd "$MODULE" && git pull)
     (cd "$MODULE" && git submodule foreach -q --recursive 'git checkout $(git config -f $toplevel/.gitmodules submodule.$name.branch || echo master) && git pull')
     (cd "$MODULE" && rsync -rcip --exclude=.git --exclude=README.md --exclude=LICENSE . ~)
  fi
done

sudo update-java-alternatives --set java-1.8.0-openjdk-amd64
sudo update-alternatives --install /usr/bin/node node /usr/bin/nodejs 10

#systemctl --user enable emacs
#systemctl --user start emacs

#(cp .st/config.h work/st/config.h && cd work/st && patch < ../../.st/st-git-20151217-scrollback.diff && make clean && make && cp -f ./st ~/bin/)
